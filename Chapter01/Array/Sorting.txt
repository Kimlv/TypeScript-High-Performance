const arr: number[] = [];
    let temp: number = 0;

    const randomizeArray = () => {
       for (let i = 0; i < 50000; i++) {
           arr[i] = Math.floor(Math.random() * 100000);
          }
       }

    // naive
    const naiveSort = () => {
     for (let i = 0; i < arr.length; i++) {
         for (let j = 0; j < arr.length - 1; j++) {
             if (arr[j] > arr[j + 1]) {
                   temp = arr[j];
                   arr[j] = arr[j + 1];
                   arr[j + 1] = temp;
                 }
              }
          }
      }

    // optimized
    const optimizedSort = () => {
     let swapped: boolean = true;
     while (swapped) {
           for (let j = 0; j < arr.length - 1; j++) {
                   swapped = false;
               if (arr[j] > arr[j + 1]) {
                        swapped = true;
                        temp = arr[j];
                        arr[j] = arr[j + 1];
                        arr[j + 1] = temp;
                      }
                   }
               }
          }

    const calculateTimeDifference = (func: () => void): number => {
        randomizeArray();
        const time1: number = Date.now();
        func();
        const time2: number = Date.now();
        return time2 - time1;
      }